---
layout: bt_wiki
title: Configuring the Exoscale CloudStack Cloud
category: Installation & Setup
publish: true
abstract: Explains how to configure the Exoscale CloudStack Cloud for Cloudify
pageord: 1000
--- 

This topic provides instructions for configuring the Exoscale CloudStack Cloud for Cloudify.

h2. Prerequisites

* An "(newwindow)Exoscale":http://www.exoscale.com account
* Cloudify shell (for information about installing the Cloudify shell, see "Installing the Cloudify Shell":../setup/installing_the_cloudify_client.html)

h2. Configuring an Exoscale CloudStack Cloud

This section provides step-by-step instructions for the following configuration tasks:

* "Obtain the API Key and Secret Key":#key
* "Create SSH Keypair":#ssh
* "Obtain Image, Location and Hardware IDs from Your Exoscale CloudStack Environment":#get_ids
* "Configure a Security Group":#sec
* "Configure the Cloudify Cloud Driver Configuration Files":#driver
* "Bootsrapping a Cloudify Manager on CloudStack":#bootstrap
* "Tearing Down the Cloudify Environment":#tear


h3(#key). Obtain the API Key and Secret Key

# Login to your Exoscale account
# Go to Account Details -> API Details and see the CloudStack API URL, key and secret key
!/guide/images/exoscale/exoscale-account.png!

<br/>

!/guide/images/exoscale/exoscale-creds.png!

h4(info). The API URL and keys will be used later with your driver configuration to communicate with the CloudStack environment.

h3(#ssh). Obtain an SSH Keypair 

You can generate the keypair from the Exoscale dashboard (Choose "Keypairs" on the left and click "Add"). 

!/guide/images/exoscale/exoscale-keypair.png!

After you've generated the keypair file, you should place it in the @upload@ directory in your Exoscale cloud driver folder, e.g. @<cloudify root>/clouds/exoscale/upload@. 

h3(#get_ids). Obtain Compute Offering, Zone and Template IDs from Your CloudStack Environment

Compute Offering, Zone and Template IDs determine the hardware profile and operating system image of the VMs Cloudify will create on Exoscale. Note that in the Cloudify/JClouds lingo, Compute offering IDs correspond to hardware IDs, template IDs correspond to image IDs, and zone IDs corresspond to location IDs. In this cotext we'll use the CloudStack / Exoscale terms. You can use the "(newwindow)JClouds CLI":https://github.com/jclouds/jclouds-cli to retreive them. To get the list of compute offering, template and zone IDs using this tool, follow the below steps: 

* Download the "(newwindow)JClouds CLI":http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22org.jclouds.cli%22%20AND%20a%3A%22jclouds-cli%22 (choose the tarball for *nix systems and zip for windowns based system) and extract it any where om your disk
* In the extracted directory, navigate to the @/bin@ directory and run the @jcloud-cli@ command.
* Install the @cloudstack@ feature: @features:install jclouds-api-cloudstack@
* Type the following command to get the template IDs list: @jclouds:image-list --api cloudstack --credential <secretKey> --identity <apiKey> --endpoint http://<server address>/client/api@
* Type the following command to get the zone IDs list: @jclouds:location-list --api cloudstack --credential <secretKey> --identity <apiKey> --endpoint http://<server address>/client/api@
* Type the following command to get the compute offering IDs list: @jclouds:hardware-list --api cloudstack --credential <secretKey> --identity <apiKey> --endpoint http://<server address>/client/api@
The output should look like this:

Templates list: 

<pre class='prettyprint'>
[id]                                 [location]                           [os family] [os version] [status]
e72f32dd-b9bb-44c0-aba9-546592a3e09a d0d5f14f-0564-45e4-86d9-bbcb3c2bfa3f windows     7            AVAILABLE
8dacbe2d-c4e9-4a6c-82bc-f4bd3540d84e d0d5f14f-0564-45e4-86d9-bbcb3c2bfa3f centos      5.6          AVAILABLE
a2aa03dc-a294-4188-8062-be24e21ebe6e d0d5f14f-0564-45e4-86d9-bbcb3c2bfa3f centos      6.0          AVAILABLE
</pre>

Zones List (note that you should use a location with scope ZONE): 
<pre class='prettyprint'>
id]                                 [scope]  [description]                      [parent]
cloudstack                           PROVIDER http://iaas.cpgdemo.net/client/api
d0d5f14f-0564-45e4-86d9-bbcb3c2bfa3f ZONE     CPGDemo                            cloudstack
</pre>

Compute offerings list:

<pre class='prettyprint'>
[id]                                 [ram]  [cpu] [cores]
9baa1a86-d9ab-4e58-ae67-269efa459a79  2048 2000.0     2.0
60bdc030-338c-446d-a316-adc30fdaced7  1024 1000.0     1.0
ebc56d93-2732-4265-9734-e0fdd52851b5   512  500.0     1.0
0ef1c905-2daa-4da8-b444-04ed7fd6fda6   256 1000.0     1.0
</pre>

h3(#sec). Configure One or More Security Groups

Next, you should configure a security group with the following rules: 
To enable Cloudify to properly start and configure VMs for you, you will need to define the following rules in a security group (you can do this in more than group, as long as the )
* Management VM: ingress, TCP port 22 and 8100 for the CLI machine and any client that you want to use to access the started VMs via SSH or the Cloudify CLI. You can simply open it for all sources (CIDR 0.0.0.0/0)
* Management VM: ingress for 8099 for any machine that should have access to the Web UI and REST API. You can also open it for all sources (CIDR 0.0.0.0/0). 
* Every VM started by Cloudify: egress for 80 and 443 to all targets (CIDR 0.0.0.0/0) to enable downloading binaries from the internet.
* Every VM started by Cloudify: egress and ingress for TCP ports 0-32000 for communication between the manager and the agents. 
* Application VMs, as needed: Any application specific ports that you would like to expose to the outside world (e.g. 80 and 443 for out-facing web servers). 

h3(#driver). Configure the Cloudify Cloud Driver Configuration File

First, download the "Cloudify Exoscale CloudStack driver files":https://github.com/CloudifySource/cloudify-cloud-drivers/tree/master/exoscale and place them in @<cloudifyRoot>/clouds/exoscale/@
Edit the Exoscale CloudStack cloud driver configuration file (@exoscale-cloud.properties@) and modify the following attributes:

<pre class='prettyprint'>
//CloudStack API Key
apiKey="API_KEY"

//CloudStack Secret Key
secretKey="SECRET_KEY"

persistencePath="/var/cloudifyManagerState"

//The CloudStack API Endpoint URL
cloudStackAPIEndpoint="CLOUDSTACK_API_ENDPOINT_URL"
	
//The id of the security group you want your VMs created with. 
//If you create more compute templates in the cloudstack-cloud.groovy files, this can be changed 
//on a per template basis
securityGroupId="SECURITY_GROUP_ID"

//The CloudStack compute offiering ID you would like to use. This can be changed for each cloud driver template as well 
computeOfferingId="COMPUTE_OFFERING_ID"

//The SSH username and password for Cloudify to use when installing and configuring created VMs. Place the 
//SSH credentials in the two lines below if you're using simple SSH authentication without a keypair. 
//Also make sure to uncomment the username and password properties in the exoscale-cloud.groovy file, and 
//comment out the keyFile and keyPair properties in that file. 
sshUsername="SSH_USER"
sshPassword="SSH_PASSWORD"

//The SSH keypair name and file name for Cloudify to use when installing and configuring created VMs. 
//The keypair file should be placed under the /upload directory of the cloud driver configuration. 
sshKeypairName="KEYPAIR_NAME"
sshKeypairFile="KEYPAIR_FILE"

remoteUploadDirectory="/opt/cloudify"
localUploadDirectory="upload"

//The CloudStack zone ID of the compute template you're going to use
zoneId="ZONE_ID"

//The cloudstack compute template ID for created VMs. This too can be overridden on a per compute template basis
templateId="TEMPLATE_ID"

// Ubuntu image ID
ubuntuTemplateId="UBUNTU_TEMPLATE_ID"
</pre>

h3(#bootstrap). Bootstrapping

You're ready to bootstrap Cloudify on your Exoscale environment. Follow the "bootstrapping":../bootstrapping/bootstrapping_process.html#boot procedure, typing the following command in step 2: *@bootstrap-cloud@* @exoscale@

h3(#tear). Teardown

To shut down a CloudStack Cloud environment, at the Cloudify shell prompt, type: *@teardown-cloud@* @exoscale@

h4(info). This uninstalls applications and shuts down all the management and service instance machines.

