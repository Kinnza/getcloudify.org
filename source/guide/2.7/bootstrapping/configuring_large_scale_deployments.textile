---
layout: bt_wiki
title: Configuring Cloudify for Large Scale Deployments
category: Bootstrapping
publish: true
abstract: Explains how to configure Cloudify for large scale deployments
pageord: 990
--- 

Cloudify orchestrator is stateful by nature. 
It stores the state in the memory in order to react fast to changes. 
Therefore, the larger your deployment gets, the higher the manager's memory consumption gets.

There are some other resources and confugrations needed as well in such deployments. 
This document will guide you through configuring your cloud driver for supporting large deployments.
Bear in mind that the Cloudify manager may manage several applications, so a large deployment might mean many regular size applications or a very large application.

The Cloudify management contains several services and compenents (e.g. : LUS,GSM,ESM) hence it needs to have a sufficient amount of cpu, memory and storage.
In the cloud driver, you need to specify the hardwareId that meets your needs and requirements in terms of processor,cpu,memory,storage and network performance.

h4(impt). You need to configure the cloud driver configuration in advance (prior to the bootstrapping process).

h2. Selecting the right Hardware

In order for the Cloudify manager to function well, you need use an image that has the following (at least) : 
# 8 CPU cores (26 ECU in EC2)
# 30 GB of memory (RAM)

The Cloudify management also requires an image that supports high network performance

For example: If you use EC2, you need to use *m3.2xlarge* for the management vm.

h2. Configuring the JVM settings of the orchestrator processes

Cloudify enables you to set the required memory size for each of its components.
This is done in the components section in an the cloud driver.
Here's a snippet of the components section in an EC2 cloud driver:
<script src="https://gist.github.com/tamirko/8019449.js"></script>





<!-- 
Due to threading limitations, we reccomend that you install 10 service instances at a time by using the "set-instances":../recipe/command_line_reference.html#set_instances CLI command.
-->



