---
layout: bt_wiki
title: Recipes and Networking
category: Developing Recipes
publish: true
abstract: Cloudify Network Support
pageord: 1000
---
h3. Overview

Cloudify provides network abstraction to allow applications to define and create their network topology as part of the application deployment.

Currently, Cloudify offers network implementation for OpenStack using the Neutron API and the corresponding attributes in Nova API.

h4(impt). This feature is available only for OpenStack Grizzly or Havana.

* Dynamic Application Network Provisioning - Cloudify creates an applicative network according to the configuration and bind the application services to this network (as well as to the management network)

* Static Application Network Binding - Cloudify binds the application VMs to pre-provisioned netwoks according to the list specified in each service compute template

h5. Support for Security Groups

The recipe's DSL allows the user to define access rules per service. Cloudify Cloud Driver uses these rules to create security groups and bind the service VMs to these groups.

h5. Support for Floating IPs

Cloudify Network Cloud Driver provides API for working with floating IPs. This means that the recipe lifecycle events can use floating IPs programmatically
* Allocate Floating IPs (*allocateFloatingIP* command)
* Associate a Floating IP with a VM (*assignFloatingIP* command)
* Detach the Floating IP from the VM (*unassignFloatingIP* command. For example in case of fail-over and auto-healing)
* Release a Floating IP (*releaseFloatingIP* command)

Here's example of usage :
<script src="https://gist.github.com/tamirko/8315355.js"></script>

h3. Creating Service Security Rules

The recipe's DSL allows for Security Rules definitions.
Both inbound and outbound rules are supported.

<script src="https://gist.github.com/tamirko/b5e044fe4e8e2b572c61.js"></script>

The rules refer to the scope of the access list using the following scope types (There are the levels of rules, aka types):
<script src="https://gist.github.com/tamirko/8037206.js"></script>






